    @Override
    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
        String text = parent.getItemAtPosition(position).toString();
        //this.urlSource = text;
        if(text.toLowerCase().equalsIgnoreCase("roadworks")){
            this.urlSource = "https://trafficscotland.org/rss/feeds/roadworks.aspx";
            //Log.i("Url", "Url changed" + this.urlSource);
        }else if(text.toLowerCase().equalsIgnoreCase("Planned Roadworks")){
            this.urlSource = "https://trafficscotland.org/rss/feeds/plannedroadworks.aspx";
            ArrayList<Item> newList = new ArrayList<>();
            try {
                mAdapter = null;
                obj = new HandleXml(this.urlSource);
                //newList = obj.fetchXml();
                mAdapter = new ItemRecycleAdapter(obj.fetchXml());
                mRecyclerView.setAdapter(mAdapter);
                mRecyclerView.setLayoutManager(new LinearLayoutManager(this));

            } catch (XmlPullParserException e) {
                e.printStackTrace();
            }



        }else{
            this.urlSource = "https://trafficscotland.org/rss/feeds/currentincidents.aspx";
            Log.i("Url", "Url changed" + this.urlSource);
        }

    }



    mRecyclerView = findViewById(R.id.recView);
            obj = new HandleXml(this.urlSource);
            try {
                mAdapter = new ItemRecycleAdapter(obj.fetchXml());

            } catch (XmlPullParserException e) {
                e.printStackTrace();
            }
            mLayoutManager = new LinearLayoutManager(this);
            //mRecyclerView.setHasFixedSize(true);
            mRecyclerView.setLayoutManager(mLayoutManager);
            mRecyclerView.setAdapter(mAdapter);