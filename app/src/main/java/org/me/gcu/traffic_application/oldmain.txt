package org.me.gcu.traffic_application;

import android.app.Fragment;
import android.app.FragmentTransaction;
import android.content.Intent;
import android.os.Bundle;
import android.view.Menu;
import android.view.MenuInflater;
import android.view.MenuItem;
import android.view.inputmethod.EditorInfo;
import android.widget.EditText;
import android.widget.ListView;
import android.widget.SearchView;

import androidx.annotation.NonNull;
import androidx.appcompat.app.AppCompatActivity;
import androidx.recyclerview.widget.RecyclerView;

import com.google.android.material.bottomnavigation.BottomNavigationView;
import com.google.android.material.textfield.TextInputEditText;

import org.me.gcu.traffic_application.Adapter.ItemRecycleAdapter;
import org.me.gcu.traffic_application.Fragments.HomeFragment;
import org.me.gcu.traffic_application.models.DatePicker;

import java.text.SimpleDateFormat;
import java.util.Calendar;

public class MainActivity extends AppCompatActivity{
    private static final String TAG = "MainActivity";
    private static final int ERROR_DIALOG_REQUEST =9001;
    private RecyclerView mRecyclerView;
    private ItemRecycleAdapter mAdapter;
    private RecyclerView.LayoutManager mLayoutManager;
    private EditText search;
    private String urlSource = "https://trafficscotland.org/rss/feeds/roadworks.aspx";
    private HandleXml obj;
    private ListView listView;
    private Calendar cal = Calendar.getInstance();
    private SimpleDateFormat sdf= new SimpleDateFormat("MMM-dd-yyyy");
    private String current_date = sdf.format(cal.getTime());
    private DatePicker datePicker;
    private HomeFragment home;




    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        home = new HomeFragment();
        search = (TextInputEditText)findViewById(R.id.inputDate);
        search.setText(current_date);


        BottomNavigationView bottomnav = findViewById(R.id.bottom_navigation);
        bottomnav.setOnNavigationItemSelectedListener(navListener);


        //if(isMapOK()){
            //Log.i("fine", "MAP IS OKAY");
            //init();
        //}
    }


    public void openActivity1() {
        Intent intent = new Intent(this, MainActivity.class);
        startActivity(intent);
        overridePendingTransition(0,0);

    }
    public void openActivity2() {
        Intent intent = new Intent(this, RoadWorksActivity.class);
        startActivity(intent);
        overridePendingTransition(0,0);

    }

    public boolean onCreateOptionsMenu(Menu menu){
        MenuInflater inflater = getMenuInflater();
        inflater.inflate(R.menu.example_menu, menu);

        MenuItem searchItem = menu.findItem(R.id.action_search);
        SearchView searchView = (SearchView) searchItem.getActionView();
        searchView.setImeOptions(EditorInfo.IME_ACTION_DONE);
        searchView.setOnQueryTextListener(new SearchView.OnQueryTextListener() {
            @Override
            public boolean onQueryTextSubmit(String query) {
                return false;
            }

            @Override
            public boolean onQueryTextChange(String newText) {

                mAdapter.getFilter().filter(newText);
                return false;
            }
        });

        //searchView.setOnQueryTextListener();
        return true;
    }

    private void init(){

        //Button btnMap =(Button) findViewById(R.id.btnMap);

        //btnMap.setOnClickListener(new View.OnClickListener() {
            //@Override
            //public void onClick(View v) {
                //Intent intent = new Intent(MainActivity.this, MapsActivity.class);
                //startActivity(intent);
            //}
        //});

    }

    //public boolean isMapOK(){
        //Log.d(TAG, "Checking if google services verion");

        //int available = GoogleApiAvailability.getInstance().isGooglePlayServicesAvailable(MainActivity.this);

        ///if(available  == ConnectionResult.SUCCESS){
            //Working
            //Log.d(TAG, "Google play is working");

            //return true;
        //}else if(GoogleApiAvailability.getInstance().isUserResolvableError(available)){
            //Error occurs but can resolve it

            //Log.d(TAG,"isMapOK(): An error has occurred");
            //Dialog dialog = GoogleApiAvailability.getInstance().getErrorDialog(MainActivity.this, available, ERROR_DIALOG_REQUEST);
            //dialog.show();
        //}else{
            //Toast.makeText(this,"Can't connect to map",Toast.LENGTH_SHORT).show();
        //}
        //Log.i("FALSE", "FALSE");
        //return false;

    //}

    private BottomNavigationView.OnNavigationItemSelectedListener navListener=
            new BottomNavigationView.OnNavigationItemSelectedListener() {
                @Override
                public boolean onNavigationItemSelected(@NonNull MenuItem menuItem) {
                    Fragment selectedFragment = null;
                    switch (menuItem.getItemId()){
                        case R.id.nav_home:
                            setFragment(home);
                            return true;

                        case R.id.nav_plan:
                            openActivity2();
                            break;
                        case R.id.nav_map:
                            //Intent intent = new Intent(MainActivity.this, MapsActivity.class);
                            //selectedFragment.startActivity();
                            //selectedFragment = new MapFragment();
                            break;
                        default:
                            return false;
                    }
                    // getSupportFragmentManager().beginTransaction().replace(R.id.fragment_container,selectedFragment).commit();
                    return false;
                }

            };

    private void setFragment(Fragment fragment){
        FragmentTransaction fragmentTransaction = getFragmentManager().beginTransaction();
        fragmentTransaction.replace(R.id.fragment_container, fragment);
        fragmentTransaction.commit();
    }


}
